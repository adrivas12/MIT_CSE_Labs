$date
	Thu Sep 15 10:32:27 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module q2_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " Cout $end
$var reg 1 # Cin $end
$var reg 4 $ x [3:0] $end
$var reg 4 % y [3:0] $end
$scope module q2 $end
$var wire 1 # Cin $end
$var wire 4 & x [3:0] $end
$var wire 4 ' y [3:0] $end
$var wire 4 ( z [3:0] $end
$var wire 4 ) s [3:0] $end
$var wire 1 " Cout $end
$scope module stage0 $end
$var wire 1 # Cin $end
$var wire 4 * x [3:0] $end
$var wire 4 + y [3:0] $end
$var wire 4 , s [3:0] $end
$var wire 3 - c [3:1] $end
$var wire 1 " Cout $end
$scope module stage0 $end
$var wire 1 # Cin $end
$var wire 1 . Cout $end
$var wire 1 / s $end
$var wire 1 0 x $end
$var wire 1 1 y $end
$upscope $end
$scope module stage1 $end
$var wire 1 2 Cin $end
$var wire 1 3 Cout $end
$var wire 1 4 s $end
$var wire 1 5 x $end
$var wire 1 6 y $end
$upscope $end
$scope module stage2 $end
$var wire 1 7 Cin $end
$var wire 1 8 Cout $end
$var wire 1 9 s $end
$var wire 1 : x $end
$var wire 1 ; y $end
$upscope $end
$scope module stage3 $end
$var wire 1 < Cin $end
$var wire 1 " Cout $end
$var wire 1 = s $end
$var wire 1 > x $end
$var wire 1 ? y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0?
0>
0=
0<
0;
0:
19
08
17
16
05
04
13
12
11
10
0/
1.
b11 -
b100 ,
b11 +
b1 *
b100 )
b11 (
b11 '
b1 &
b11 %
b1 $
0#
0"
b100 !
$end
#20
1=
1<
b1000 !
b1000 )
b1000 ,
09
b111 -
18
1;
b111 (
b111 +
b111 %
b111 '
#40
0=
0<
08
19
07
b110 !
b110 )
b110 ,
14
b1 -
03
06
b101 (
b101 +
b101 %
b101 '
#60
